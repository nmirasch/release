apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/nmirasch/release?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch
      == "GITOPS-6959_microshift-gitops_rpm" && ( "rpms/microshift-gitops/***".pathChanged() || ".tekton/local-release-microshift-gitops-rpm-push.yaml".pathChanged()
      )
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: testing-rpms-builds
    appstudio.openshift.io/component: local-release-microshift-gitops-rpm
    pipelines.appstudio.openshift.io/type: build
  name: local-release-microshift-gitops-rpm-on-push
  namespace: rh-openshift-gitops-tenant
spec:
  params:
  - name: ociStorage
    value: quay.io/redhat-user-workloads/rh-openshift-gitops-tenant/microshift-gitops-rpm:{{revision}}
  - name: package-name
    value: microshift-gitops
  - name: context
    value: rpms/microshift-gitops
  - name: path-context
    value: rpms/microshift-gitops
  - name: context-path
    value: rpms/microshift-gitops
  - name: specfile
    value: microshift-gitops.spec
  - name: git-url
    value: "{{ source_url }}"
  - name: revision
    value: "{{ revision }}"
  - name: target-branch
    value: "{{ target_branch }}"
  - name: hermetic
    value: "true"
  - name: build-architectures
    value:
    - aarch64
    - x86_64
  - name: script-environment-image
    value: "quay.io/redhat-user-workloads/rh-openshift-gitops-tenant/release-fbd2f@sha256:2b5579ac78772db182b44038fa62cc6bfb5e2e72cee409388fbde86c9c65d0b1"
  - name: pre-build-script-content
    value: |
      #!/usr/bin/env bash
      set -euxo pipefail
      
      echo "--- Preparing to generate spec and sources using Skopeo ---"
      
      mkdir -p original-repo
      skopeo copy "oci-archive:$(params.source-artifact)" "dir:./original-repo"
      echo "Original repo extracted using Skopeo."
      
      ./generic-pre-build-script.sh
      cd ..
      echo "Generator script executed successfully."
      
      # 3. Stage the new source artifact in a clean 'workdir'
      mkdir workdir
      echo "Staging new artifact in ./workdir"
      
      cp original-repo/rpms/microshift-gitops/microshift-gitops.spec ./workdir/
      cp original-repo/argo-cd-sources.tar.gz ./workdir/
      
      cd workdir
      sha512sum *.tar.gz > sources
      cat sources
      cd ..
      echo "'sources' file created."
      
      MODIFIED_ARTIFACT_URL="$(params.ociStorage).sources:pre-build-$(date +%s)"
      
      skopeo copy "dir:./workdir" "docker://${MODIFIED_ARTIFACT_URL}" --digestfile digest.txt
      
      REPO_URL=$(echo "${MODIFIED_ARTIFACT_URL}" | cut -d: -f1)
      NEW_DIGEST=$(cat digest.txt)
      NEW_ARTIFACT_WITH_DIGEST="${REPO_URL}@${NEW_DIGEST}"
      
      echo "Pushed new source artifact to: ${NEW_ARTIFACT_WITH_DIGEST}"
      
      echo -n "${NEW_ARTIFACT_WITH_DIGEST}" | tee $(results.manipulated-source-artifact.path)
  pipelineRef:
    resolver: git
    params:
    - name: url
      value: "https://github.com/nmirasch/rpmbuild-pipeline.git"
    - name: revision
      value: main
    - name: pathInRepo
      value: pipeline/build-rpm-package.yaml
  taskRunTemplate:
    serviceAccountName: build-pipeline-release-fbd2f
  workspaces:
  - name: source
    persistentVolumeClaim:
      claimName: "{{pvc_name}}"
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
